<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.attraction.apply.mapper.StBizApplyMapper">
	<resultMap id="stBizApplyMap" type="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
	    <id column="APPLY_ID" property="applyId"/>
	    <result column="APPLY_STORE_ID" property="applyStoreId"/>
	    <result column="STORE_ID" property="storeId"/>
	    <result column="USER_ID" property="userId"/>
	    <result column="APPLY_STORE_NAME" property="applyStoreName"/>
	    <result column="ADMIN_ID" property="adminId"/>
	    <result column="STATUS" property="status"/>
	    <result column="MEMO" property="memo"/>
	    <result column="APPLICATED_AT" property="applicatedAt"/>
	    <result column="ACCEPT_AT" property="acceptAt"/>
	    <result column="ADDRESS1" property="address1"/>
	    <result column="ADDRESS2" property="address2"/>
	    <result column="LON" property="lon"/>
	    <result column="LAT" property="lat"/>
	    <result column="ADMIN_CONTACT" property="adminContact"/>
	    <result column="ADMIN_EMAIL" property="adminEmail"/>
	    
	    <result column="JIBUN_ADDRESS" property="jibunAddress"/>
	    <result column="ADMIN_BIZ_NAME" property="adminBizName"/>
	    <result column="POSTCODE" property="postcode"/>
	</resultMap>
	
	<insert id="insertStore" parameterType="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
		<selectKey keyProperty="applyStoreId" resultType="String" order="BEFORE">
	        SELECT 'SA' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_STATS_DATA_STORE_INFO_ID.NEXTVAL, 8, '0') FROM DUAL
	    </selectKey>
		INSERT INTO STATS_DATA_STORE_INFO (
		       STORE_ID,
		       STORE_NAME,
		       ROAD_ADDRESS,
		       LONGITUDE,
		       LATITUDE,
		       JIBUN_ADDRESS,
		       STANDARD_INDUSTRY_NAME,
		       NEW_POSTAL_CODE
		) VALUES (
		       	#{applyStoreId},
				#{applyStoreName},
				#{address1} || ' ' || #{address2},
				#{lon},
            	#{lat},
            	#{jibunAddress},
            	#{adminBizName},
            	#{postcode}
		)
	</insert>
	
	<!-- 폼 인서트 -->
	<insert id="insertStBizApply" parameterType="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
		INSERT INTO ST_BIZ_APPLY (
            APPLY_ID,
            USER_ID,
            APPLY_STORE_NAME,
            ADMIN_ID,
            STATUS,
            MEMO,
            APPLICATED_AT,
            ACCEPT_AT,
            ADDRESS1,
            ADDRESS2,
            LON,
            LAT,
            ADMIN_CONTACT,
            ADMIN_EMAIL,
            JIBUN_ADDRESS,
            ADMIN_BIZ_NAME,
            POSTCODE
        ) VALUES (
             SEQ_ST_BIZ_APPLY_ID.NEXTVAL,
            #{userId},
            #{applyStoreName},
            NULL,
            '처리중',
            #{memo},
            SYSDATE,
            NULL,
            #{address1},
            #{address2},
            #{lon},
            #{lat},
            #{adminContact},
            #{adminEmail},
            #{jibunAddress},
            #{adminBizName},
            #{postcode}
        )
	</insert>
	
	<update id="updateStBizApply" parameterType="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
		UPDATE ST_BIZ_APPLY
		SET 
		   STATUS = '승인',
		   ACCEPT_AT = SYSDATE,
		   APPLY_STORE_ID = #{applyStoreId}
		 WHERE APPLY_ID = #{applyId}
	</update>
	
	<select id="stBizApplyList" parameterType="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
		SELECT
			APPLY_ID
			, USER_ID
			, APPLY_STORE_NAME
			, ADMIN_ID
			, STATUS
			, MEMO
			, APPLICATED_AT
			, ACCEPT_AT
			, ADDRESS1
			, ADDRESS2
			, LON
			, LAT
			, ADMIN_CONTACT
			, ADMIN_EMAIL
			, JIBUN_ADDRESS
            , ADMIN_BIZ_NAME
            , POSTCODE
		FROM
			ST_BIZ_APPLY
		WHERE
			1 = 1
			<if test="userId != null and userId != ''">
			AND USER_ID = #{userId}
			</if>
			<if test="status != null and status != ''">
			AND STATUS = #{status}
			</if>
	</select>
	
	
	<!--관리자jsp페이징  -->
<select id="selectStBizApplyCount" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM ST_BIZ_APPLY
    <where>
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
                USER_ID LIKE '%' || #{searchKeyword} || '%'
                OR ADMIN_CONTACT LIKE '%' || #{searchKeyword} || '%'
                OR ADMIN_EMAIL LIKE '%' || #{searchKeyword} || '%'
                OR APPLY_STORE_NAME LIKE '%' || #{searchKeyword} || '%'
            )
        </if>
        <if test="status != null and status != ''">
            AND STATUS = #{status}
        </if>
    </where>
</select>
<select id="selectStBizApplyStatusSummary" resultType="map">
    SELECT
        COUNT(*) AS TOTAL_COUNT,
        COUNT(CASE WHEN STATUS = '처리중' THEN 1 END) AS PENDING_COUNT,
        COUNT(CASE WHEN STATUS = '승인' THEN 1 END) AS APPROVED_COUNT,
        COUNT(CASE WHEN STATUS = '반려' THEN 1 END) AS REJECTED_COUNT
    FROM ST_BIZ_APPLY
</select>

<select id="getStBizApplyList" parameterType="map" resultType="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
    SELECT * FROM (
        SELECT A.*, ROWNUM RNUM FROM (
            SELECT
                APPLY_ID, USER_ID, APPLY_STORE_NAME, ADMIN_ID, STATUS, MEMO,
                APPLICATED_AT, ACCEPT_AT, ADDRESS1, ADDRESS2, LON, LAT,
                ADMIN_CONTACT, ADMIN_EMAIL, JIBUN_ADDRESS, ADMIN_BIZ_NAME, POSTCODE
            FROM ST_BIZ_APPLY
            <where>
                <if test="searchKeyword != null and searchKeyword != ''">
                    AND (
                        USER_ID LIKE '%' || #{searchKeyword} || '%'
                        OR ADMIN_CONTACT LIKE '%' || #{searchKeyword} || '%'
                        OR ADMIN_EMAIL LIKE '%' || #{searchKeyword} || '%'
                        OR APPLY_STORE_NAME LIKE '%' || #{searchKeyword} || '%'
                    )
                </if>
                <if test="status != null and status != ''">
                    AND STATUS = #{status}
                </if>
            </where>
            ORDER BY
                CASE WHEN STATUS = '처리중' THEN 1 ELSE 2 END,
                APPLICATED_AT DESC
        ) A
        WHERE ROWNUM &lt;= #{endRow}
    )
    WHERE RNUM &gt;= #{startRow}
</select>

	
	<select id="getStBizApplyStatsList" resultType="hashMap">
		SELECT
		    DONG,
		    COUNT(*) AS COUNT
		FROM (
		    SELECT
		        CASE
		            WHEN JIBUN_ADDRESS IS NULL OR JIBUN_ADDRESS LIKE '%지번주소 없음%' THEN '기타'
		            ELSE TRIM(SUBSTR(JIBUN_ADDRESS, INSTR(JIBUN_ADDRESS, ' ', 1, 2) + 1, INSTR(JIBUN_ADDRESS, ' ', 1, 3) - INSTR(JIBUN_ADDRESS, ' ', 1, 2) - 1))
		        END AS DONG
		    FROM
		        ST_BIZ_APPLY
		)
		GROUP BY
		    DONG
		ORDER BY
		    COUNT DESC
	</select>
	
	<select id="selectApplyById" parameterType="int" resultType="kr.or.ddit.attraction.apply.vo.StBizApplyVO">
        SELECT
            APPLY_ID,
            USER_ID,
            APPLY_STORE_NAME,
            STATUS
            FROM
            ST_BIZ_APPLY
        WHERE
            APPLY_ID = #{applyId}
    </select>
	
</mapper>
