<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.user.my.community.mapper.MyActivityMapper">

    <!-- 활동 내역 카운트 쿼리 -->
    <select id="selectMyActivityCount" parameterType="String" resultType="int">
        SELECT
            SUM(CNT)
        FROM (
            SELECT COUNT(*) AS CNT FROM ORG_PRAISE_POST WHERE USER_ID = #{userId} AND IS_DELETED = 'N'
            UNION ALL
            SELECT COUNT(*) AS CNT FROM CS_QNA_POST WHERE USER_ID = #{userId} AND IS_DELETED = 'N'
            UNION ALL
            SELECT COUNT(*) AS CNT FROM COMM_REVIEW_POST WHERE USER_ID = #{userId} AND IS_DELETED = 'N'
            UNION ALL
            SELECT COUNT(*) AS CNT FROM COMM_REVIEW_COMMENT WHERE USER_ID = #{userId} AND IS_DELETED = 'N'
        ) A
    </select>

    <!-- 활동 내역 목록 조회 쿼리 (페이징 포함) -->
    <select id="selectMyActivityList" parameterType="map" resultType="kr.or.ddit.user.my.community.vo.MyActivityVO2">
        SELECT B.*
        FROM (
            SELECT A.*, ROWNUM AS RNUM
            FROM (
                SELECT
                    'post' AS ACTIVITY_TYPE,
                    '칭찬게시판' AS BOARD_TYPE,
                    TO_CHAR(PRAISE_ID) AS POST_ID,
                    TO_CHAR(0) AS COMMENT_ID,
                    TITLE,
                    TO_CLOB(CONTENT) AS CONTENT,
                    CREATED_AT,
                    '/cs/praise' AS POST_URL
                FROM ORG_PRAISE_POST
                WHERE USER_ID = #{userId} AND IS_DELETED = 'N'

                UNION ALL

                SELECT
                    'post' AS ACTIVITY_TYPE,
                    'Q&amp;A' AS BOARD_TYPE,
                    TO_CHAR(QUES_ID) AS POST_ID,
                    TO_CHAR(0) AS COMMENT_ID,
                    TITLE,
                    TO_CLOB(CONTENT) AS CONTENT,
                    CREATED_AT,
                    '/cs/qna/detail?quesId=' || QUES_ID AS POST_URL
                FROM CS_QNA_POST
                WHERE USER_ID = #{userId} AND IS_DELETED = 'N'

                UNION ALL

                SELECT
                    'post' AS ACTIVITY_TYPE,
                    '창업후기' AS BOARD_TYPE,
                    TO_CHAR(POST_ID) AS POST_ID,
                    TO_CHAR(0) AS COMMENT_ID,
                    TITLE,
                    TO_CLOB(CONTENT) AS CONTENT,
                    CREATED_AT,
                    '/comm/review/detail?postId=' || POST_ID AS POST_URL
                FROM COMM_REVIEW_POST
                WHERE USER_ID = #{userId} AND IS_DELETED = 'N'

                UNION ALL

                SELECT
                    'comment' AS ACTIVITY_TYPE,
                    '창업후기' AS BOARD_TYPE,
                    TO_CHAR(C.POST_ID) AS POST_ID,
                    TO_CHAR(C.COMMENT_ID) AS COMMENT_ID,
                    P.TITLE,
                    TO_CLOB(C.CONTENT) AS CONTENT,
                    C.CREATED_AT,
                    '/comm/review/detail?postId=' || C.POST_ID AS POST_URL
                FROM COMM_REVIEW_COMMENT C
                JOIN COMM_REVIEW_POST P ON C.POST_ID = P.POST_ID
                WHERE C.USER_ID = #{userId} AND C.IS_DELETED = 'N'

                ORDER BY CREATED_AT DESC
            ) A
        ) B
        WHERE B.RNUM BETWEEN #{startRow} AND #{endRow}
    </select>
    
    <!-- 모달 내용 조회를 위한 쿼리 -->
	<select id="selectActivityContent" resultType="String">
	    <choose>
	        <when test='boardType == "칭찬게시판" and activityType == "post"'>
	            SELECT CONTENT FROM ORG_PRAISE_POST WHERE PRAISE_ID = #{id}
	        </when>
	        <when test='boardType == "Q&amp;A" and activityType == "post"'>
	            SELECT CONTENT FROM CS_QNA_POST WHERE QUES_ID = #{id}
	        </when>
	        <when test='boardType == "창업후기" and activityType == "post"'>
	            SELECT CONTENT FROM COMM_REVIEW_POST WHERE POST_ID = #{id}
	        </when>
	        <when test='boardType == "창업후기" and activityType == "comment"'>
	            SELECT CONTENT FROM COMM_REVIEW_COMMENT WHERE COMMENT_ID = #{id}
	        </when>
	        <otherwise>
	            SELECT '내용을 찾을 수 없습니다.' FROM DUAL
	        </otherwise>
	    </choose>
	</select>
</mapper>